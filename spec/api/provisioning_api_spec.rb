=begin
#Telstra Messaging API

#The Telstra Messaging API specification

The version of the OpenAPI document: 2.2.9

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Telstra_Messaging::ProvisioningApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProvisioningApi' do
  before do
    # run before each test
    @api_instance = Telstra_Messaging::ProvisioningApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProvisioningApi' do
    it 'should create an instance of ProvisioningApi' do
      expect(@api_instance).to be_instance_of(Telstra_Messaging::ProvisioningApi)
    end
  end

  # unit tests for create_subscription
  # Create Subscription
  # Invoke the provisioning API to get a dedicated mobile number for an account or application.  Note that Free Trial apps will have a 30-Day Limit for their provisioned number. If the Provisioning call is made several times within that 30-Day period, it will return the &#x60;expiryDate&#x60; in the Unix format and will not add any activeDays until after that &#x60;expiryDate&#x60;. After the &#x60;expiryDate&#x60;, you may make another Provisioning call to extend the activeDays by another 30-Days.  For paid apps, a provisioned number can be allotted for a maximum of 5 years. If a Provisioning call is made which will result to activeDays &gt; 1825, a 409 &#x60;Active Days Max&#x60; response will be returned to indicate that the provisioned number is already valid for more than 5 years and that no update to activeDays has been made. 
  # @param body A JSON payload containing the required attributes
  # @param [Hash] opts the optional parameters
  # @return [ProvisionNumberResponse]
  describe 'create_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_subscription
  # Delete Subscription
  # Delete a mobile number subscription from an account 
  # @param body EmptyArr
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscription
  # Get Subscription
  # Get mobile number subscription for an account 
  # @param [Hash] opts the optional parameters
  # @return [GetSubscriptionResponse]
  describe 'get_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
