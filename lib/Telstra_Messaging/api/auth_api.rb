=begin
#Telstra Messaging API

# The Telstra SMS Messaging API allows your applications to send and receive SMS text messages from Australia's leading network operator.  It also allows your application to track the delivery status of both sent and received SMS messages. 

OpenAPI spec version: 2.2.4

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

require "uri"

module Telstra_Messaging
  class AuthApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # AuthGeneratetokenPost
    # generate auth token
    # @param o_auth_client_id 
    # @param o_auth_client_secret 
    # @param [Hash] opts the optional parameters
    # @return [AuthgeneratetokenpostResponse]
    def oauth_token_post(o_auth_client_id, o_auth_client_secret, opts = {})
      data, _status_code, _headers = oauth_token_post_with_http_info(o_auth_client_id, o_auth_client_secret, opts)
      return data
    end

    # AuthGeneratetokenPost
    # generate auth token
    # @param o_auth_client_id 
    # @param o_auth_client_secret 
    # @param [Hash] opts the optional parameters
    # @return [Array<(AuthgeneratetokenpostResponse, Fixnum, Hash)>] AuthgeneratetokenpostResponse data, response status code and response headers
    def oauth_token_post_with_http_info(o_auth_client_id, o_auth_client_secret, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AuthApi.oauth_token_post ..."
      end
      # verify the required parameter 'o_auth_client_id' is set
      if @api_client.config.client_side_validation && o_auth_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'o_auth_client_id' when calling AuthApi.oauth_token_post"
      end
      # verify the required parameter 'o_auth_client_secret' is set
      if @api_client.config.client_side_validation && o_auth_client_secret.nil?
        fail ArgumentError, "Missing the required parameter 'o_auth_client_secret' when calling AuthApi.oauth_token_post"
      end
      # resource path
      local_var_path = "/oauth/token"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["oAuthClientId"] = o_auth_client_id
      form_params["oAuthClientSecret"] = o_auth_client_secret

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AuthgeneratetokenpostResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AuthApi#oauth_token_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
