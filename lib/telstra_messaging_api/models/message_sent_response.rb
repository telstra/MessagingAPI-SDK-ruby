# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module TelstraMessagingApi
  # MessageSentResponse Model.
  class MessageSentResponse < BaseModel
    # TODO: Write general description for this method
    # @return [List of Message]
    attr_accessor :messages

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :message_type

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :number_segments

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :number_destinations

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['messages'] = 'messages'
      @_hash['message_type'] = 'messageType'
      @_hash['number_segments'] = 'numberSegments'
      @_hash['number_destinations'] = 'numberDestinations'
      @_hash
    end

    def initialize(messages = nil,
                   message_type = nil,
                   number_segments = nil,
                   number_destinations = nil)
      @messages = messages
      @message_type = message_type
      @number_segments = number_segments
      @number_destinations = number_destinations
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      messages = nil
      unless hash['messages'].nil?
        messages = []
        hash['messages'].each do |structure|
          messages << (Message.from_hash(structure) if structure)
        end
      end
      message_type = hash['messageType']
      number_segments = hash['numberSegments']
      number_destinations = hash['numberDestinations']

      # Create object from extracted values.
      MessageSentResponse.new(messages,
                              message_type,
                              number_segments,
                              number_destinations)
    end
  end
end
