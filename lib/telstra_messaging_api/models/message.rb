# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module TelstraMessagingApi
  # Message Model.
  class Message < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :to

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :delivery_status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :message_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :message_status_link

    # A mapping from model property names to API property names.
    def self.names
      if @_hash.nil?
        @_hash = {}
        @_hash['to'] = 'to'
        @_hash['delivery_status'] = 'deliveryStatus'
        @_hash['message_id'] = 'messageId'
        @_hash['message_status_link'] = 'messageStatusLink'
      end
      @_hash
    end

    def initialize(to = nil,
                   delivery_status = nil,
                   message_id = nil,
                   message_status_link = nil)
      @to = to
      @delivery_status = delivery_status
      @message_id = message_id
      @message_status_link = message_status_link
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      to = hash['to']
      delivery_status = hash['deliveryStatus']
      message_id = hash['messageId']
      message_status_link = hash['messageStatusLink']

      # Create object from extracted values.
      Message.new(to,
                  delivery_status,
                  message_id,
                  message_status_link)
    end
  end
end
